http://localhost/Magento21/custompage/
http://localhost/Magento21/custompage/index/test


Content deploy only custom theme:
#  php bin/magento setup:static-content:deploy en_US -a frontend -t TemplateMonster/theme764
#  php bin/magento cache:clean
-------------------------------------------------------------------------------------
 Custom module Create
Steps:
1 Disable Magento cache                                                                                                                             2. Put Magento into a developer mode                                                                                               php bin/magento deploy:mode:set developer                                                                                                    3. Create the following folders:
a.  app/code/Inchoo                                                                                                                          b. app/code/Inchoo/Helloworld                                                                                                               c. app/code/Inchoo/Helloworld/etc/module.xml                                                                                                           d.  app/code/Inchoo/Helloworld/registration.php
4. Open your terminal and go to the Magento 2 root                                                                   php bin/magento setup:upgrade 
app/code/Inchoo/Helloworld/etc/frontend /routes.xml app/code/Inchoo/Helloworld/Controller/Index/Index.php app/code/Inchoo/Helloworld/Block/Helloworld.php app/code/Inchoo/Helloworld/view/frontend/layout/helloworld_index_index.xml app/code/Inchoo/Helloworld/view/frontend/templates/helloworld.phtml                                                        
5. Open the URL in your browser                                                                                    /helloworld/index/index
follow:  http://inchoo.net/magento-2/how-to-create-a-basic-module-in-magento-2/
-----------------------$$$$------$$$$-----$$$$----$$$$-------------------------------------------

Db import /Export  command
import db
cd  /home/laxmit/public_html/magento2
mysql -u laxmit -p db_laxmitnew1968 < sample_data.sql.zip
export db
cd  /home/laxmit/public_html/magento2
mysqldump -u root -p db_laxmitnew1968 >  db_laxmitnew1968.sql
-----------------------$$$$------$$$$-----$$$$----$$$$-------------------------------------------

Magento2 issues

Admin menu link’s are not working, please follow the below steps to fix the same…
1. Remove everything, except .htaccess file from pub/static folder
2. Open up app/etc/di.xml find the path “Magento\Framework\App\View\Asset\MaterializationStrategy\Symlink” and replace to “Magento\Framework\App\View\Asset\MaterializationStrategy\Copy”                                                          Note: Remove entire files and folder under pub/static except .htaccess file.

Magento 2 Useful Commands List
Setup Upgrade Using Command Line
php bin/magento setup:upgrade

If you don’t want to remove pub/static files while installing/updating database then use following command.
php bin/magento setup:upgrade --keep-generated

Cache Clean Using Command Line
php bin/magento cache:clean

Cache Flush Using Command Line
php bin/magento cache:flush

View cache status Using Command Line
php bin/magento cache:status

Enable Cache Using Command Line
php bin/magento cache:enable [cache_type]

Disable Cache Using Command Line
php bin/magento cache:disable [cache_type]

Static Content Deploy Using Command Line
php bin/magento setup:static-content:deploy

Static Content Deploy For Particular Language Using Command Line
php bin/magento setup:static-content:deploy en_US

Static Content Deploy For Magento Backend Theme Using Command Line (Working on 2.1.1 or later)
php bin/magento setup:static-content:deploy --theme="Magento/backend"

Static Content Deploy For Specific Themes Using Command Line (Working on 2.1.1 or later)
php bin/magento setup:static-content:deploy --theme Magento/luma --theme Magento/second_theme

Exclude Themes on Static Content Deploy and does not minify HTML files Using Command Line (Working on 2.1.1 or later)
php bin/magento setup:static-content:deploy en_US --exclude-theme Magento/luma --no-html-minify


Reindexing Using Command Line
php bin/magento indexer:reindex

View the list of indexers Using Command Line
php bin/magento indexer:info

View indexer status Using Command Line
php bin/magento indexer:status

Show the mode of all indexers Using Command Line
php bin/magento indexer:show-mode

Enable module Using Command Line

php bin/magento module:enable Namespace_Module

Disable module Using Command Line
php bin/magento module:disable Namespace_Module

Uninstall Module Using Command Line
php bin/magento module:uninstall Namespace_Module

Check Current Mode Using Command Line
php bin/magento deploy:mode:show

Change To Developer Mode Using Command Line
php bin/magento deploy:mode:set developer

Change To Production Mode Using Command Line
php bin/magento deploy:mode:set production

Run the single-tenant Compiler Using Command Line
php bin/magento setup:di:compile


Override Core Module:

https://magento.stackexchange.com/questions/119795/override-module-contact-view-and-controller




Css file changes:
create file inside theme  /app/design/frontend/Rk/Demo/web/css/source/_theme.less

php bin/magento setup:upgrade
php bin/magento cache:flush


Custom theme php/phtml file changes:

php bin/magento setup:static-content:deploy
php bin/magento cache:flush



CSV import url rewrite:
https://github.com/Turiknox/magento2-urlrewriteimporter





Add log in magento
$writer = new \Zend\Log\Writer\Stream(BP . '/var/log/test.log');
$logger = new \Zend\Log\Logger();
$logger->addWriter($writer);
$logger->info('Your text message');


command:
 php bin/magento cache:clean
php bin/magento cache:flush
php bin/magento cache:disable
php bin/magento indexer:reindex
php bin/magento setup:upgrade
php bin/magento setup:di:compile
php bin/magento setup:static-content:deploy
php bin/magento deploy:mode:set developer
php bin/magento deploy:mode:set production
php bin/magento deploy:mode:show

php bin/magento module:status 
php bin/magento module:enable Namespace_Module
php bin/magento module:disable Namespace_Module

zip -r test.zip * -x 'test1/'

chmod -R 777 pub/media app/etc var pub/static



rm -rf  pub/static       [Keep the .htaccess backed up and copy it again]
rm -rf  var/cache var/composer_home var/generation  var/page_cache var/view_preprocessed

rm -rf  var/cache
rm -rf  var/composer_home
rm -rf  var/generation
rm -rf  var/page_cache
rm -rf  var/view_preprocessed
php bin/magento setup:static-content:deploy






CSS JS Can't we loaded

You can disable option in your admin
Stores>Configuration>Advanced>Developer>Sign Static Files (dev_static_sign)
Or simply insert this row in your core_config_data table
insert core_config_data (config_id, scope, scope_id, path, value) values (null, 'default', 0, 'dev/static/sign', 0);



Add custom css /js file:
step1.   
app/design/frontend/Rk/Demo/Magento_Theme/layoutdefault_head_blocks.xml
<head><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no"/>
<css src="css/custom.css" order="100"  />
<link src="js/custom.js"/> 
</head>

Step2. 
Add css:   /app/design/frontend/Rk/Demo/web/css/custom.css

Add js:        /app/design/frontend/Rk/Demo/web/js/custom.js
require(["jquery"], function($){
    alert("my name");
});

Step3.
# rm -rf  pub/static/
#  Set pub/static/  permission 777
#  php bin/magento setup:static-content:deploy
#  php bin/magento cache:clean
-------------------------------------------------------------------------------------
Add custom css /js file on Single Page product Layout:
Step1
 File:      app/design/frontend/Rk/Demo/Magento_Catalog/layout/catalog_product_view.xml
<page layout="1column" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">                                                                                                                                                                     <head>                                                                                                                                                                                                    <link src="Magento_Catalog::js/customproduct.js"/>                                                                                                    </head>	                                                                                                                                                              </page>
Step2:                app/design/frontend/Rk/Demo/Magento_Catalog/web/jscustomproduct.js
require(["jquery"], function($){                                                                                                                                     alert("product3");                                                                                                                                                                            });
Step3.                                                                                                                                                             # rm -rf  pub/static/                                                                                                                                                                        #  Set pub/static/  permission 777                                                                                                                                        #  php bin/magento setup:static-content:deploy                                                                                                         #  php bin/magento cache:clean
-------------------------------------------------------------------------------------
How to add css and js file in module
Step1:         D:\xampp\htdocs\retro\app\code\Company\Custompage\view\frontend\layout\custompage_index_index.xml                                                                                                                          
 <page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">                                                                                                             <!-- for add css and js file on page -->                                                                             <head>                                                                                                                                          <!-- for css file -->                                                                                                                        <css src="Company_Custompage::css/custompage.css"/>                                                              <!-- for js file -->                                                                                                                           <link src="Company_Custompage::js/custompage.js"/>                                                     </head>                                                                                                                                             <!-- for add css and js file on page -->                                                               <referenceContainer name="content">                                                                             <block class="Company\Custompage\Block\Index" name="custompage_index" template="Company_Custompage::sayhello.phtml" />		 </referenceContainer>                                                                                                           </page>
Step2                                                                                                                                                D:\xampp\htdocs\retro\app\code\Company\Custompage\view\frontend\web\js\custompage.js      
                                                                                                                                    require(["jquery"], function($){                                                                                                  alert("retro custompage");
});                                          
                                                                                                                                                      D:\xampp\htdocs\retro\app\code\Company\Custompage\view\frontend\web\css\custompage.css
Step3:
# rm -rf  pub/static/                                                                                                                                                                        #  Set pub/static/  permission 777                                                                                                                                        #  php bin/magento setup:static-content:deploy                                                                                                         #  php bin/magento cache:clean
--------------------------------------------------------------------------------


Controller /Model /Block Extend:
Step1:  Override Catalog Product ListProduct Block.
Webkul/Hello/etc/di.xml
<?xml version="1.0"?>                                                                                                                                               <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd"><preference for="Magento\Catalog\Block\Product\ListProduct" type="Webkul\Hello\Block\Rewrite\Product\ListProduct" />                                                                                                                    </config>                                                                                                                     
Webkul/Hello/Block/Rewrite/Product /ListProduct.php 
<?php                                                                                                                                                                                                /**                                                                                                                                                                                                      * Hello Rewrite Product ListProduct Block
* @category  Webkul
* @package  Webkul_Hello                                                                                                                                     * @author Webkul Software Private Limited                                                                                                                           */
namespace Webkul\Hello\Block\Rewrite\Product;
class ListProduct extends \Magento\Catalog\Block\Product\ListProduct   {
     public function _getProductCollection()   
   {                                                                                                                // Do your stuff here
      }                                                                                                                                                                                                 }
---------------------------------------------------------------------------------------------------------------------


Step2: Overriding Model

di.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
 <preference for="Magento\Catalog\Model\Product" type="Webkul\Hello\Model\Rewrite\Catalog\Product" />
</config>


Webkul/Hello/Model/Rewrite/Catalog/Product.php 

<?php
    /**
     * Hello Catalog Product Rewrite Model
     *
     * @category    Webkul
     * @package     Webkul_Hello
     * @author      Webkul Software Private Limited
     *
     */
    namespace Webkul\Hello\Model\Rewrite\Catalog;
 
    class Product extends \Magento\Catalog\Model\Product
    {
        public function isSalable()
        {
            // Do your stuff here
            return parent::isSalable();
        }
 






Step3:   Override Product View Controller. 

di.xml

<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="Magento\Catalog\Controller\Product\View" type="Webkul\Hello\Controller\Rewrite\Product\View" />
</config>


Webkul/Hello/Controller/Rewrite/Product/ View.php
<?php
    /**
     * Hello Rewrite Product View Controller
     *
     * @category    Webkul
     * @package     Webkul_Hello
     * @author      Webkul Software Private Limited
     *
     */
    namespace Webkul\Hello\Controller\Rewrite\Product;
 
    class View extends \Magento\Catalog\Controller\Product\View
    {
        /**
         * @return \Magento\Framework\Controller\Result\Redirect|\Magento\Framework\View\Result\Page
         */
        public function execute()
        {
            // Do your stuff here
            return parent::execute();
        }
    }


helper function call in block.phtml


Helper:  /app/code/Oss/TestPage/Helper/Data.php
<?php
        namespace Oss\TestPage\Helper;

        use Magento\Framework\App\Helper\AbstractHelper;

       class Data extends AbstractHelper {
	
       public function ossTestHelper()    {
          return 'test block/helper call in phtml##';
       }
 }

Block: app/code/Oss/TestPage/Block/Index/Index.php

<?php
 
namespace Oss\TestPage\Block\Index;

class Index extends \Magento\Framework\View\Element\Template {

    protected $myModuleHelper;
 
    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Oss\TestPage\Helper\Data $myModuleHelper,
        array $data = []
    ) {
        parent::__construct($context, $data);
        $this->_mymoduleHelper = $myModuleHelper;
    }
 
    public function ossTestBlock() {
        return $this->_mymoduleHelper->ossTestHelper();
    }

}

View: Call block in view file

echo $block->ossTestBlock();


Event / Observer magento

(Set default Product price to cart item quote)

Step1. Create custom  Module

Ste2. app/code/Oss/Cartevent/Observer/Customprice.php

<?php
namespace Oss\Cartevent\Observer;
class Customprice implements \Magento\Framework\Event\ObserverInterface{
  public function execute(\Magento\Framework\Event\Observer $observer)  {   
    
    /*Set default Product price to cart item quote*/	
	   $item = $observer->getEvent()->getData('quote_item');         
		$item = ( $item->getParentItem() ? $item->getParentItem() : $item );
		$price = 100; 
		$item->setCustomPrice($price);
		$item->setOriginalCustomPrice($price);
		$item->getProduct()->setIsSuperMode(true); 
	
  }
  
}


Step3.  app/code/Oss/Cartevent/etc/Events.xml

<?xml version="1.0"?>
  <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
<event name="checkout_cart_product_add_after">
    <observer name="oss_cartevent_observer_customprice" instance="Oss\Cartevent\Observer\Customprice" />
   </event>
</config>

-------------------------------------------------------------

Overwrite template Contact form:

App/design/frontend/Rk/Demo/Magento_Contact/templates/form.phtml


----------------
Magento css:

By default, media queries are outputting styles in two different files:
1. styles-m.less – which generates basic and mobile-specific styles
2. styles-l.less – generates desktop-specific styles (for 768px width screen and higher)
This means that, when the website is opened on a mobile device, it will load only styles compiled from the styles-m.less file. Extra styles from the second file (styles-l.less) are compiling and loading only if the screen width is 768px or higher.


<move element="catalog.topnav" destination="header-wrapper" after="logo"/>
  <move element="top.search" destination="header-wrapper"  after="catalog.topnav"/>

Magento2 Rest API:

System-> intrgation ->Addnw intregation key-> get Access Token 

Install Postman:
Set Header
1. Authorization :  bearer can2bstkkf7v5tt5rasubphjtsjtfsu9
2. Content-Type  : application/json


Product list (Get):
http://172.16.10.16/~laxmit/m2/index.php/rest/V1/products?searchCriteria 


Create product (POST)

http://172.16.10.16/~laxmit/m2/index.php/rest/V1/products 

Authorization - bearer can2bstkkf7v5tt5rasubphjtsjtfsu9 
Content-Type : application/json 


Raw: 
 {
 	"product": {
 		"sku": "ABC_1234567",
 		"name": "My Product Title Listing",
 		"attributeSetId": 10,
 		"price": 425.99,
 		"status": 1,
 		"visibility": 4,
 		"typeId": "simple",
 		"createdAt": "2016-05-26 14:00:00",
 		"updatedAt": "2016-05-26 14:00:00",
 		"weight": 15
 	},
 	"saveOptions": true
 	 }
--
https://mage2.pro/t/topic/1297

update cart https://www.thirdandgrove.com/creating-custom-rest-api-magento2

https://www.demacmedia.com/extending-magento-2-rest-web-api/
